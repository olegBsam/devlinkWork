Программа Main
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
      Лог isFirstOpen
    Конец
  Если (рв10 = 1.00000)
  {
    Initialization
    TestAllDevices
  }
  
  Если ((!isMotionSensorActive(100)) & (GetTimerState(250, 1) # 0.000000))
  {
    TimerStope(250, 1)
    SetTimerState(250, 1, 0.000000)
  }
  
  Если (GetTimerState(250, 1) < 1.00000)
  {
    Если ((GetTimerState(250, 0) # 0.000000) & (GetTimerState(250, 0) < 30.0000))
    {
      Если (isMotionSensorActive(100) & (GetTimerState(250, 1) = 0.000000))
      {
        TimerStart(250, 1)
      }
      
    }
    
    Если isSMKOpen(150)
    {
      Если (GetTimerState(250, 0) = 0.000000)
      {
        RelaysTurnOn(101)
        TimerStart(250, 0)
      }
      
    }
    
    Если (30.0000 <= GetTimerState(250, 0))
    {
      TimerStope(250, 0)
      Если (!isSMKOpen(150))
      {
        рв500 = GetTimerState(250, 0)
        SetTimerState(250, 0, 0.000000)
      }
      
      Если (GetTimerState(250, 1) = 0.000000)
      {
        RelaysTurnOff(101)
      }
      
    }
    
  }
  Иначе
  {
    RelaysTurnOn(100)
  }
  
Конец

Процедура Initialization
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для constId[50...51]
  {
    пц[constId] = вц(рв[constId])
  }
  
  Для smkStateCodeId[55]
  {
    пц[smkStateCodeId] = вц(рв[smkStateCodeId])
  }
  
  рв10 = 0.000000
Конец

Процедура TestAllDevices
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для devicesId[200...201]
  {
    Если (!пл[devicesId])
    {
      рв[devicesId] = 404.000
    }
    Иначе
    {
      рв[devicesId] = 1.00000
    }
    
  }
  
Конец

Функция isMotionSensorActive
  Входные_Переменные
    Начало
      Цел16 sensorId
    Конец
  Выходные_Переменные
    Начало
      Лог sensorState
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _sensorId[100]
  {
    Если (_sensorId = sensorId)
    {
      sensorState = (рв100 = 1245.00)
    }
    
  }
  
Конец

Функция _RelaysSetState
  Входные_Переменные
    Начало
      Цел16 relaysId
      Лог state
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Если ((100 <= relaysId) & (relaysId <= 101))
  {
    Для _relaysId[100...101]
    {
      Если (relaysId = _relaysId)
      {
        пл[_relaysId] = state
        Прервать
      }
      
    }
    
  }
  
Конец

Функция RelaysTurnOn
  Входные_Переменные
    Начало
      Цел16 relaysId
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  _RelaysSetState(relaysId, 1)
Конец

Функция RelaysTurnOff
  Входные_Переменные
    Начало
      Цел16 relaysId
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  _RelaysSetState(relaysId, 0)
Конец

Функция SMKStateRead
  Входные_Переменные
    Начало
      Цел16 smkId
    Конец
  Выходные_Переменные
    Начало
      Цел16 smkState
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _smkId[150]
  {
    Если (_smkId = smkId)
    {
      smkState = пц[_smkId]
      Прервать
    }
    
  }
  
Конец

Функция isSMKOpen
  Входные_Переменные
    Начало
      Цел16 smkId
    Конец
  Выходные_Переменные
    Начало
      Лог _isSMKOpen
    Конец
Начало
  Константы
    Начало
      Цел16 SMK_STATE_OPEN = 9263
    Конец
  Переменные
    Начало
    Конец
  _isSMKOpen = (SMKStateRead(smkId) = 9263)
Конец

Функция TimerStart
  Входные_Переменные
    Начало
      Цел16 timerId
      Цел16 timerType
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _timerId[250...253]
  {
    Если (_timerId = timerId)
    {
      Если (timerType = 0)
      {
        Вкл тс[_timerId]
      }
      Иначе
      {
        Если (timerType = 1)
        {
          Вкл тм[_timerId]
        }
        
      }
      
      Прервать
    }
    
  }
  
Конец

Функция TimerStope
  Входные_Переменные
    Начало
      Цел16 timerId
      Цел16 timerType
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _timerId[250...253]
  {
    Если (_timerId = timerId)
    {
      Если (timerType = 0)
      {
        Выкл тс[_timerId]
      }
      Иначе
      {
        Если (timerType = 1)
        {
          Выкл тм[_timerId]
        }
        
      }
      
      Прервать
    }
    
  }
  
Конец

Функция GetTimerState
  Входные_Переменные
    Начало
      Цел16 timerId
      Цел16 timerType
    Конец
  Выходные_Переменные
    Начало
      Вещ32 timerState
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _timerId[250...253]
  {
    Если (_timerId = timerId)
    {
      Если (timerType = 0)
      {
        timerState = тс[_timerId]
      }
      Иначе
      {
        Если (timerType = 1)
        {
          timerState = тм[_timerId]
        }
        
      }
      
      Прервать
    }
    
  }
  
Конец

Функция SetTimerState
  Входные_Переменные
    Начало
      Цел16 timerId
      Цел16 timerType
      Вещ32 timerState
    Конец
  Выходные_Переменные
    Начало
    Конец
Начало
  Константы
    Начало
    Конец
  Переменные
    Начало
    Конец
  Для _timerId[250...253]
  {
    Если (_timerId = timerId)
    {
      Если (timerType = 0)
      {
        тс[_timerId] = timerState
      }
      Иначе
      {
        Если (timerType = 1)
        {
          тм[_timerId] = timerState
        }
        
      }
      
      Прервать
    }
    
  }
  
Конец

